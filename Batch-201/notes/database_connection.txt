##
##Mysql setup
###

references:
http://sstackoverflow.com/questions/19189813/setting-django-up-use-mysql
https://www.digitalocean.com/community/tutorials/how-to-use-mysql-or-mariadb-with-your-django-application-on-ubuntu-14-04



sudo apt-get install python-dev mysql-server libmysqlclient-dev
pip install MYSQL-python
pip install pymysql
pip install mysqlclient

(myenv) khyaathi@khyaathi-Technologies:~/Desktop/Batch-201/src$ mysql -u root -p
Enter password:
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 5
Server version: 5.7.18-0ubuntu0.16.10.1 (Ubuntu)

Copyright (c) 2000, 2017, Oracle and/or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
4 rows in set (0.04 sec)

mysql> create database my_address;
Query OK, 1 row affected (0.02 sec)

mysql> create user myprojectuser@localhost identified by 'password';
Query OK, 0 rows affected (0.05 sec)

mysql> grant all privileges on my
    -> \x
    -> \c
mysql> grant all privileges on my_address.* to myprojectuser@localhost;
Query OK, 0 rows affected (0.01 sec)

mysql> flush privileges;
Query OK, 0 rows affected (0.00 sec)

mysql>

# make following changes in teh `setting.py`` files.

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'my_address',
        'USER':'myprojectuser',
        'PASSWORD':'password',
        'HOST':'localhost'
        'PORT':'',
    }
}

khyaathi@khyaathi-Technologies:~/Documents/tuxfux-hlp-notes/Django-notes/Batch-201$ mysql -u myprojectuser -p
Enter password:
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 6
Server version: 5.7.18-0ubuntu0.16.10.1 (Ubuntu)

Copyright (c) 2000, 2017, Oracle and/or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| my_address         |
+--------------------+
2 rows in set (0.00 sec)

mysql> use my_address;
Database changed
mysql> show tables;
Empty set (0.00 sec)

mysql>

khyaathi@khyaathi-Technologies:~/Documents/tuxfux-hlp-notes/Django-notes/Batch-201$ ls
myenv  My_new.sublime-project  My_new.sublime-workspace  notes  src
khyaathi@khyaathi-Technologies:~/Documents/tuxfux-hlp-notes/Django-notes/Batch-201$ cd src
khyaathi@khyaathi-Technologies:~/Documents/tuxfux-hlp-notes/Django-notes/Batch-201/src$ ls
address  AddressBook  db.sqlite3  manage.py  newtest_app  project_local  project_prod  requirements.txt  templates
khyaathi@khyaathi-Technologies:~/Documents/tuxfux-hlp-notes/Django-notes/Batch-201/src$ sqlite3 db.sqlite3
SQLite version 3.14.1 2016-08-11 18:53:32
Enter ".help" for usage hints.
sqlite> .tables
address_address_detail            auth_group
address_article                   auth_group_permissions
address_articles                  auth_permission
address_articles_publications     auth_user
address_new_course                auth_user_groups
address_person                    auth_user_user_permissions
address_place                     django_admin_log
address_publication               django_content_type
address_reporter                  django_migrations
address_restaurant                django_session
address_waiter                    registration_registrationprofile
sqlite>


(myenv) khyaathi@khyaathi-Technologies:~/Desktop/Batch-201/src$ ls
address  AddressBook  db.sqlite3  manage.py  newtest_app  project_local  project_prod  requirements.txt  templates
(myenv) khyaathi@khyaathi-Technologies:~/Desktop/Batch-201/src$
(myenv) khyaathi@khyaathi-Technologies:~/Desktop/Batch-201/src$ ls
address  AddressBook  db.sqlite3  manage.py  newtest_app  project_local  project_prod  requirements.txt  templates
(myenv) khyaathi@khyaathi-Technologies:~/Desktop/Batch-201/src$ python manage.py makemigrations
/home/khyaathi/Documents/tuxfux-hlp-notes/Django-notes/Batch-201/src
No changes detected
(myenv) khyaathi@khyaathi-Technologies:~/Desktop/Batch-201/src$


(myenv) khyaathi@khyaathi-Technologies:~/Desktop/Batch-201/src$ python manage.py makemigrations
/home/khyaathi/Documents/tuxfux-hlp-notes/Django-notes/Batch-201/src
No changes detected
(myenv) khyaathi@khyaathi-Technologies:~/Desktop/Batch-201/src$ python manage.py migrate
/home/khyaathi/Documents/tuxfux-hlp-notes/Django-notes/Batch-201/src
Operations to perform:
  Synchronize unmigrated apps: staticfiles, messages, crispy_forms, fontawesome
  Apply all migrations: sessions, admin, address, auth, contenttypes, registration
Synchronizing apps without migrations:
  Creating tables...
    Running deferred SQL...
  Installing custom SQL...
Running migrations:
  Rendering model states... DONE
  Applying address.0001_initial... OK
  Applying address.0002_auto_20170317_1459... OK
  Applying address.0003_person... OK
  Applying address.0004_auto_20170411_1445... OK
  Applying address.0005_auto_20170411_1508... OK
  Applying address.0006_auto_20170411_1534... OK
  Applying address.0007_course... OK
  Applying address.0008_auto_20170411_1604... OK
  Applying contenttypes.0001_initial... OK
  Applying auth.0001_initial... OK
  Applying admin.0001_initial... OK
  Applying contenttypes.0002_remove_content_type_name... OK
  Applying auth.0002_alter_permission_name_max_length... OK
  Applying auth.0003_alter_user_email_max_length... OK
  Applying auth.0004_alter_user_username_opts... OK
  Applying auth.0005_alter_user_last_login_null... OK
  Applying auth.0006_require_contenttypes_0002... OK
  Applying registration.0001_initial... OK
  Applying sessions.0001_initial... OK
(myenv) khyaathi@khyaathi-Technologies:~/Desktop/Batch-201/src$


mysql> show tables;
+----------------------------------+
| Tables_in_my_address             |
+----------------------------------+
| address_address_detail           |
| address_article                  |
| address_articles                 |
| address_articles_publications    |
| address_new_course               |
| address_person                   |
| address_place                    |
| address_publication              |
| address_reporter                 |
| address_restaurant               |
| address_waiter                   |
| auth_group                       |
| auth_group_permissions           |
| auth_permission                  |
| auth_user                        |
| auth_user_groups                 |
| auth_user_user_permissions       |
| django_admin_log                 |
| django_content_type              |
| django_migrations                |
| django_session                   |
| registration_registrationprofile |
+----------------------------------+
22 rows in set (0.00 sec)

mysql>


##
#  Postgre setup
##

# installation of the postgre database
# sudo apt-get install postgresql postgresql-contrib
# pip install psycopg2

## reference:
https://gist.github.com/Kartones/dd3ff5ec5ea238d4c546
https://github.com/DjangoGirls/tutorial-extensions/blob/master/optional_postgresql_installation/README.md

# how to login

(myenv) khyaathi@khyaathi-Technologies:~/Desktop/Batch-201/src$ sudo -i -u postgres
postgres@khyaathi-Technologies:~$
postgres@khyaathi-Technologies:~$ psql
psql (9.5.6)
Type "help" for help.

postgres=# \q

postgres@khyaathi-Technologies:~$ psql
psql (9.5.6)
Type "help" for help.

postgres=# create user myprojectuser;
CREATE ROLE
postgres=# create database my_address owner myprojectuser;
CREATE DATABASE
postgres=#
postgres=# help
You are using psql, the command-line interface to PostgreSQL.
Type:  \copyright for distribution terms
       \h for help with SQL commands
       \? for help with psql commands
       \g or terminate with semicolon to execute query
       \q to quit
postgres=# \h
postgres=# \d
No relations found.
postgres=# \l
                                List of databases
    Name    |     Owner     | Encoding | Collate | Ctype |   Access privileges
------------+---------------+----------+---------+-------+-----------------------
 my_address | myprojectuser | UTF8     | en_IN   | en_IN |
 postgres   | postgres      | UTF8     | en_IN   | en_IN |
 template0  | postgres      | UTF8     | en_IN   | en_IN | =c/postgres          +
            |               |          |         |       | postgres=CTc/postgres
 template1  | postgres      | UTF8     | en_IN   | en_IN | =c/postgres          +
            |               |          |         |       | postgres=CTc/postgres
(4 rows)

postgres=# \c my_address
You are now connected to database "my_address" as user "postgres".
my_address=# \d
No relations found.
my_address=#

my_address=# alter user myprojectuser with password 'password';
ALTER ROLE
my_address=#


# python manage.py makemigrations
# (myenv) khyaathi@khyaathi-Technologies:~/Documents/tuxfux-hlp-notes/Django-notes/Batch-201/src$ python manage.py migrate
/home/khyaathi/Documents/tuxfux-hlp-notes/Django-notes/Batch-201/src
Operations to perform:
  Synchronize unmigrated apps: staticfiles, messages, crispy_forms, fontawesome
  Apply all migrations: sessions, admin, address, auth, contenttypes, registration
Synchronizing apps without migrations:
  Creating tables...
    Running deferred SQL...
  Installing custom SQL...
Running migrations:
  Rendering model states... DONE
  Applying address.0001_initial... OK
  Applying address.0002_auto_20170317_1459... OK
  Applying address.0003_person... OK
  Applying address.0004_auto_20170411_1445... OK
  Applying address.0005_auto_20170411_1508... OK
  Applying address.0006_auto_20170411_1534... OK
  Applying address.0007_course... OK
  Applying address.0008_auto_20170411_1604... OK
  Applying contenttypes.0001_initial... OK
  Applying auth.0001_initial... OK
  Applying admin.0001_initial... OK
  Applying contenttypes.0002_remove_content_type_name... OK
  Applying auth.0002_alter_permission_name_max_length... OK
  Applying auth.0003_alter_user_email_max_length... OK
  Applying auth.0004_alter_user_username_opts... OK
  Applying auth.0005_alter_user_last_login_null... OK
  Applying auth.0006_require_contenttypes_0002... OK
  Applying registration.0001_initial... OK
  Applying sessions.0001_initial... OK
(myenv) khyaathi@khyaathi-Technologies:~/Documents/tuxfux-hlp-notes/Django-notes/Batch-201/src$

# NOTE:
only the schema that is defined in models.py gets created.
whereas the data still needs to copied from the old database to the new database.
* data pump.
* data copy.








