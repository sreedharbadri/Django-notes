"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 1.8.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os


BASE_DIR = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
print BASE_DIR

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '98wz)m$mla=vfcckqpu_-4+cvg-6@%tk_zi^x12a$b=%^v!y+x'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False  # for django-toolbar to work this should be set to true.

ALLOWED_HOSTS = ['127.0.0.1','localhost'] # django proudction implementation
INTERNAL_IPS = ('127.0.0.1')   # django-debug-toolbar


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',  # admin app
    'django.contrib.auth',   # auth app
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles', # static files
    # custom apps
    'address',
    'blog',
    # other apps
    'crispy_forms',
    'django_extensions',
    'registration',
    'debug_toolbar',
    'tastypie',

)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',
)

ROOT_URLCONF = 'mysite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR + "/templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mysite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'blog',   # Note this needs to be created manually.
#         'USER': 'batch202',
#         'PASSWORD': 'batch202',
#         'HOST':'localhost',
#         'PORT':'',
#     }
# }

# previous database.

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "project_static"),   # this is the location for common static files.
)

# files which will be used for deployment  stage - apache,pythonanywhere
STATIC_ROOT = os.path.join(BASE_DIR,"project_public")


## Email settings
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = 'tuxfux.django@gmail.com'
EMAIL_HOST_PASSWORD = 'tuxfux.django123'
EMAIL_PORT = 587
EMAIL_USE_TLS = True

##
# settings of django registartion redux
###

ACCOUNT_ACTIVATION_DAYS = 7
LOGIN_REDIRECT_URL = "/blog"
ADMINS = [('tuxfux.hlp@gmail.com','tuxfux')]  # entry to push mail during logging.

# Logging example 1

# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': True,
#     'handlers':{
#         'file':{
#                 'level':'DEBUG',
#                 'class':'logging.FileHandler',
#                 'filename':os.path.join(BASE_DIR,'logs/apps.log'),
#         },
#         },
#     'loggers':{
#         'django.request': {
#             'handlers':['file'],
#             'level':DEBUG,
#             'propogate':True,
#                           },
#                 },
#     }


LOGGING = {

# Formatters
    'version':1,
    'disable_existing_loggers': True,
    'formatters':{
        'standard':{
            'format': "[%(asctime)s] %(levelname)s [%(name)s:%(lineno)s] %(message)s",
            'datefmt' : "%d/%b/%Y %H:%M:%S"

        },

    },

# All handlers
    'handlers' :{
        'null':{
            'level':'DEBUG',
            'class':'django.utils.log.NullHandler',
        },
        'logfile':{
            'level':'DEBUG',
            'class':'logging.handlers.RotatingFileHandler',
            'filename':os.path.join(BASE_DIR,'logs/apps.log'),
            'maxBytes':50000,
            'backupCount':2,
            'formatter': 'standard',


        },
        'console':{
            'level':'INFO',
            'class':'logging.StreamHandler',
            'formatter':'standard',
        },
        'mail_admins': {
            'level':'ERROR',
            'class':'django.utils.log.AdminEmailHandler',
            'formatter':'standard',
        },

    },

# Loggers

    'loggers':{
        'django': {
            'handlers':['console'],
            'propogate':True,
            'level':'WARN',
        },
    'django.db.backends':{
        'handlers':['console'],
        'level':'DEBUG',
        'propogate':'False',
    },
    'ourapp':{
        'handlers':['mail_admins','logfile','console'],
        'level':'DEBUG',
    },


}
}
