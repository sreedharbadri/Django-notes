# Advanced database concepts
 + Django extensions
# Django Extensions - data pumping
# or change your underlying database.
# mysql or postgre

## Django extensions
https://django-extensions.readthedocs.io/en/latest

# install
pip install django-extensions

(myenv) khyaathi@khyaathi-Technologies:~/Documents/tuxfux-hlp-notes/Django-notes/Batch-202/src$ pip install django-extensions
Collecting django-extensions
  Using cached django_extensions-1.7.9-py2.py3-none-any.whl
Requirement already satisfied: six>=1.2 in /home/khyaathi/Documents/tuxfux-hlp-notes/Django-notes/Batch-202/myenv/lib/python2.7/site-packages (from django-extensions)
Installing collected packages: django-extensions
Successfully installed django-extensions-1.7.9
(myenv) khyaathi@khyaathi-Technologies:~/Documents/tuxfux-hlp-notes/Django-notes/Batch-202/src$ pip freeze
appdirs==1.4.3
Django==1.8
django-crispy-forms==1.6.1
django-extensions==1.7.9
packaging==16.8
pyparsing==2.2.0
six==1.10.0
(myenv) khyaathi@khyaathi-Technologies:~/Documents/tuxfux-hlp-notes/Django-notes/Batch-202/src$ 


##
# Added the django-extension to the INSTALLED_APPS - mysite/settings.py
###


INSTALLED_APPS = (
    'django.contrib.admin',  # admin app
    'django.contrib.auth',   # auth app
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles', # static files
    # custom apps
    'address',
    'blog',
    # other apps
    'crispy_forms',
    'django_extensions',

)

###
# run the makemigrations and migrate commands.
###

(myenv) khyaathi@khyaathi-Technologies:~/Documents/tuxfux-hlp-notes/Django-notes/Batch-202/src$ python manage.py makemigrations
/home/khyaathi/Documents/tuxfux-hlp-notes/Django-notes/Batch-202/src
No changes detected
(myenv) khyaathi@khyaathi-Technologies:~/Documents/tuxfux-hlp-notes/Django-notes/Batch-202/src$ python manage.py migrate
/home/khyaathi/Documents/tuxfux-hlp-notes/Django-notes/Batch-202/src
Operations to perform:
  Synchronize unmigrated apps: staticfiles, django_extensions, messages, crispy_forms
  Apply all migrations: admin, blog, contenttypes, auth, sessions
Synchronizing apps without migrations:
  Creating tables...
    Running deferred SQL...
  Installing custom SQL...
Running migrations:
  No migrations to apply.
(myenv) khyaathi@khyaathi-Technologies:~/Documents/tuxfux-hlp-notes/Django-notes/Batch-202/src$ 


### use cases ###

####
##django shell
####

(myenv) khyaathi@khyaathi-Technologies:~/Documents/tuxfux-hlp-notes/Django-notes/Batch-202/src$ python manage.py shell
/home/khyaathi/Documents/tuxfux-hlp-notes/Django-notes/Batch-202/src
Python 2.7.12+ (default, Sep 17 2016, 12:08:02) 
[GCC 6.2.0 20160914] on linux2
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> 
>>> from blog.models import Post
>>> Post.objects.all()
[<Post: My first post>, <Post:  My second post>, <Post: third title>, <Post: Fourth Post>, <Post: Fifth Post>, <Post: hello there>, <Post: First blog of keethan>]
>>> 


(myenv) khyaathi@khyaathi-Technologies:~/Documents/tuxfux-hlp-notes/Django-notes/Batch-202/src$ python manage.py shell_plus
/home/khyaathi/Documents/tuxfux-hlp-notes/Django-notes/Batch-202/src
# Shell Plus Model Imports
from blog.models import Article, Place, Post, Publication, Restaurant, Waiter
from django.contrib.admin.models import LogEntry
from django.contrib.auth.models import Group, Permission, User
from django.contrib.contenttypes.models import ContentType
from django.contrib.sessions.models import Session
# Shell Plus Django Imports
from django.utils import timezone
from django.conf import settings
from django.core.cache import cache
from django.contrib.auth import get_user_model
from django.db.models import Avg, Case, Count, F, Max, Min, Prefetch, Q, Sum, When
from django.db import transaction
from django.core.urlresolvers import reverse
Python 2.7.12+ (default, Sep 17 2016, 12:08:02) 
[GCC 6.2.0 20160914] on linux2
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> 
>>> User.objects.all()
[<User: admin>, <User: kumar>]
>>> 

####
## datapumping
####

1) i created a scripts folder under the src/script location and create a __init__.py under it.
# mkdir src/scripts
# touch scripts/__init__.py

2) run the below command - ./manage.py dumpscript blog
(myenv) khyaathi@khyaathi-Technologies:~/Documents/tuxfux-hlp-notes/Django-notes/Batch-202/src$ ./manage.py dumpscript blog > scripts/blog_data.py
Processing model: blog.models.Post
Processing model: blog.models.Publication
Processing model: blog.models.Article
Processing model: blog.models.Place
Processing model: blog.models.Restaurant
Processing model: blog.models.Waiter


###
# How to migrate the data from sqlite3 to mysql
####

1) install the mysql-server
# sudo apt-get install mysql-server

2) Login to the mysql database and try to create a blog database.

(myenv) khyaathi@khyaathi-Technologies:~/Documents/tuxfux-hlp-notes/Django-notes/Batch-202/src$ mysql -u root -p
Enter password: 
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 8
Server version: 5.7.18-0ubuntu0.16.10.1 (Ubuntu)

Copyright (c) 2000, 2017, Oracle and/or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| my_address         |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
5 rows in set (0.08 sec)

mysql> create database blog;
Query OK, 1 row affected (0.00 sec)

mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| blog               |
| my_address         |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
6 rows in set (0.00 sec)

# created a user.
mysql> create user batch202;
Query OK, 0 rows affected (0.06 sec)

# i gave necessary priviledges to the user.
mysql> grant all on blog.* to 'batch202'@'localhost' identified by 'batch202';
Query OK, 0 rows affected, 1 warning (0.00 sec)

mysql> show warnings;
+---------+------+------------------------------------------------------------------------------------------------------------------------------------+
| Level   | Code | Message                                                                                                                            |
+---------+------+------------------------------------------------------------------------------------------------------------------------------------+
| Warning | 1287 | Using GRANT for creating new user is deprecated and will be removed in future release. Create new user with CREATE USER statement. |
+---------+------+------------------------------------------------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)


3) we need to integrate our mysql to django
References:

https://docs.djangoproject.com/en/1.8/ref/settings/#databases
https://docs.djangoproject.com/en/1.8/ref/settings/#engine

a) Make necessary modification to the settings.py file under blog/setting.py


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'blog',   # Note this needs to be created manually.
        'USER': 'batch202',
        'PASSWORD': 'batch202',
        'HOST':'localhost',
        'PORT':'',
    }
}

b) installating the necessary to intergrate mysql and django.
# sudo apt-get install python-dev libmysqlclient-dev
# pip install MYSQL-python
# pip install pymysql
# pip install mysqlclient

c) we have to sync our schema into the mysql database.

(myenv) khyaathi@khyaathi-Technologies:~/Desktop/Batch-202/src$ python manage.py makemigrations
/home/khyaathi/Documents/tuxfux-hlp-notes/Django-notes/Batch-202/src
No changes detected
(myenv) khyaathi@khyaathi-Technologies:~/Desktop/Batch-202/src$ python manage.py migrate
/home/khyaathi/Documents/tuxfux-hlp-notes/Django-notes/Batch-202/src
Operations to perform:
  Synchronize unmigrated apps: staticfiles, django_extensions, messages, crispy_forms
  Apply all migrations: admin, blog, contenttypes, auth, sessions
Synchronizing apps without migrations:
  Creating tables...
    Running deferred SQL...
  Installing custom SQL...
Running migrations:
  Rendering model states... DONE
  Applying contenttypes.0001_initial... OK
  Applying auth.0001_initial... OK
  Applying admin.0001_initial... OK
  Applying contenttypes.0002_remove_content_type_name... OK
  Applying auth.0002_alter_permission_name_max_length... OK
  Applying auth.0003_alter_user_email_max_length... OK
  Applying auth.0004_alter_user_username_opts... OK
  Applying auth.0005_alter_user_last_login_null... OK
  Applying auth.0006_require_contenttypes_0002... OK
  Applying blog.0001_initial... OK
  Applying blog.0002_post_email... OK
  Applying blog.0003_auto_20170613_0226... OK
  Applying blog.0004_auto_20170613_0238... OK
  Applying sessions.0001_initial... OK
(myenv) khyaathi@khyaathi-Technologies:~/Desktop/Batch-202/src$ 


d) Lets create an admin user now.
(myenv) khyaathi@khyaathi-Technologies:~/Desktop/Batch-202/src$ python manage.py createsuperuser
/home/khyaathi/Documents/tuxfux-hlp-notes/Django-notes/Batch-202/src
Username (leave blank to use 'khyaathi'): admin
Email address: admin@gmail.com
Password: 
Password (again): 
Superuser created successfully.
(myenv) khyaathi@khyaathi-Technologies:~/Desktop/Batch-202/src$ 



d) Lets now verify , if we can see the tables in our new database.

mysql> use blog;
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
mysql> show tables;
+----------------------------+
| Tables_in_blog             |
+----------------------------+
| auth_group                 |
| auth_group_permissions     |
| auth_permission            |
| auth_user                  |
| auth_user_groups           |
| auth_user_user_permissions |
| blog_article               |
| blog_article_publications  |
| blog_place                 |
| blog_post                  |
| blog_publication           |
| blog_restaurant            |
| blog_waiter                |
| django_admin_log           |
| django_content_type        |
| django_migrations          |
| django_session             |
+----------------------------+
17 rows in set (0.00 sec)

mysql> 

e) Lets use the 'django extensions' for data pumping.
# TODO
(myenv) khyaathi@khyaathi-Technologies:~/Documents/tuxfux-hlp-notes/Django-notes/Batch-202/src$ python manage.py runscript new_blog_data
/home/khyaathi/Documents/tuxfux-hlp-notes/Django-notes/Batch-202/src
Exception while running run() in 'scripts.new_blog_data'
(myenv) khyaathi@khyaathi-Technologies:~/Documents/tuxfux-hlp-notes/Django-notes/Batch-202/src$ 


