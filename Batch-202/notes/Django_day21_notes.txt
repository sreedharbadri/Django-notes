# Deploy our site - pythonanywhere

1) first collect the requirements file from the development server.
(myenv) khyaathi@khyaathi-Technologies:~/Documents/tuxfux-hlp-notes/Django-notes/Batch-202$ pip freeze
appdirs==1.4.3
Django==1.8
django-crispy-forms==1.6.1
django-debug-toolbar==1.8
django-extensions==1.7.9
django-registration-redux==1.6
django-tastypie==0.13.3
MySQL-python==1.2.5
mysqlclient==1.3.10
packaging==16.8
PyMySQL==0.7.11
pyparsing==2.2.0
python-dateutil==2.6.0
python-mimeparse==1.6.0
six==1.10.0
sqlparse==0.2.3
(myenv) khyaathi@khyaathi-Technologies:~/Documents/tuxfux-hlp-notes/Django-notes/Batch-202$ pip freeze > requirements.txt
(myenv) khyaathi@khyaathi-Technologies:~/Documents/tuxfux-hlp-notes/Django-notes/Batch-202$ cat requirements.txt 
appdirs==1.4.3
Django==1.8
django-crispy-forms==1.6.1
django-debug-toolbar==1.8
django-extensions==1.7.9
django-registration-redux==1.6
django-tastypie==0.13.3
MySQL-python==1.2.5
mysqlclient==1.3.10
packaging==16.8
PyMySQL==0.7.11
pyparsing==2.2.0
python-dateutil==2.6.0
python-mimeparse==1.6.0
six==1.10.0
sqlparse==0.2.3

2) go the console of python anywhere site and update the following.
 a) first upload the requirements.txt file to the production site.
 b) create a virtual env .
 # virtualenv myenv
 # source myenv
 # pip install -r requirements.txt

 3) create an archieve of your src location directory.

 (myenv) khyaathi@khyaathi-Technologies:~/Documents/tuxfux-hlp-notes/Django-notes/Batch-202$ pwd
/home/khyaathi/Documents/tuxfux-hlp-notes/Django-notes/Batch-202
(myenv) khyaathi@khyaathi-Technologies:~/Documents/tuxfux-hlp-notes/Django-notes/Batch-202$ tar -cvf src.tar src

myenv) khyaathi@khyaathi-Technologies:~/Documents/tuxfux-hlp-notes/Django-notes/Batch-202$ ls
myenv  notes  old.myenv  requirements.txt  src  src.tar
(myenv) khyaathi@khyaathi-Technologies:~/Documents/tuxfux-hlp-notes/Django-notes/Batch-202$ 

4) Later upload the src.tar to the pythonanywhere site.
5) untar it in the production server.
# tar -xvf src.tar
6) create a production.py file by copying the base.py file . Now we have to make necessary modification in the production.py file.

* __init__.py
from .base import *

#try:
#	from .development import *
#except:
#	pass

try:
	from .production import *
except:
	pass

* in production.py file.
a) i set the DEBUG=False
DEBUG = False

b) I set the hostname for my site.
ALLOWED_HOSTS = ['tuxfux.pythonanywhere.com','127.0.0.1','localhost']

7) Go to the web tab and create your site related inputs.
8) create your database and update it necessary details.
9) Made relavent changes to the production.py file in production site.

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'tuxfux$blog',   # Note this needs to be created manually.
        'USER': 'tuxfux',
        'PASSWORD': 'batch202',
        'HOST':'tuxfux.mysql.pythonanywhere-services.com',
        'PORT':'',
    }
}


10) Made changes to the following file - /var/www/tuxfux_pythonanywhere_com_wsgi.py
Please read the whole file its self explanatory.

# +++++++++++ DJANGO +++++++++++
# To use your own django app use code like this:
import os
import sys
#
## assuming your django settings file is at '/home/tuxfux/mysite/mysite/settings.py'
## and your manage.py is is at '/home/tuxfux/mysite/manage.py'
path = '/home/tuxfux/src/'
if path not in sys.path:
    sys.path.append(path)
os.environ['DJANGO_SETTINGS_MODULE'] = 'mysite.settings'
#
## then, for django >=1.5:
from django.core.wsgi import get_wsgi_application
application = get_wsgi_application()
## or, for older django <=1.4
#import django.core.handlers.wsgi
#application = django.core.handlers.wsgi.WSGIHandler()

Changes made to the pythonanywhere site.
*********************************************
Under web tab
-------------------

Code:
What your site is running.
-----
Source code: /home/tuxfux/src
Working directory:/home/tuxfux/
WSGI configuration file:/var/www/tuxfux_pythonanywhere_com_wsgi.py
Python version:2.7

VIRTUAL ENV

Virtualenv:
Use a virtualenv to get different versions of flask, django etc from our default system ones. More info here. You need to Reload your web app to activate it; NB - will do nothing if the virtualenv does not exist.

/home/tuxfux/myenv

STATIC FILES

Files that aren't dynamically generated by your code, like CSS, JavaScript or uploaded files, can be served much faster straight off the disk if you specify them here. You need to Reload your web app to activate any changes you make to the mappings below.

URL	Directory	Delete
/static	/home/tuxfux/src/project_public

DATABASES
-----------
self explanatory.

